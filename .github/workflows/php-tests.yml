name: PHP Tests

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testing
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      vault:
        image: hashicorp/vault:1.15
        env:
          VAULT_DEV_ROOT_TOKEN_ID: myroot
          VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
        ports:
          - 8200:8200
        options: >-
          --cap-add=IPC_LOCK
          --health-cmd "VAULT_ADDR=http://127.0.0.1:8200 vault status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, pdo, pdo_pgsql, bcmath, redis
        coverage: none

    - name: Copy .env
      run: cp .env.example .env

    - name: Install Composer dependencies
      run: composer install --no-interaction --no-progress --prefer-dist

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install NPM dependencies
      run: npm ci

    - name: Build frontend assets
      run: npm run build

    - name: Generate key
      run: php artisan key:generate

    - name: Setup Vault
      run: |
        # Wait for Vault to be ready
        timeout 60 bash -c 'until curl -s http://127.0.0.1:8200/v1/sys/health; do sleep 2; done'

        # Set Vault environment variables
        export VAULT_ADDR=http://127.0.0.1:8200
        export VAULT_TOKEN=myroot
        export VAULT_READ_SECRET_ID=7c4a2e8f-9b1d-4a3c-8e5f-2d7b9c1a4e6f
        export VAULT_WRITE_SECRET_ID=3f8e1c9a-5d2b-4e7f-9a1c-6b8d4f2e7a9c

        # Install Vault CLI
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update && sudo apt-get install vault

        # Run Vault setup script
        chmod +x scripts/services/vault.sh
        bash scripts/services/vault.sh

    - name: Configure Database
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: testing
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
      run: |
        php artisan config:clear
        php artisan migrate --force

    - name: Run tests
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: testing
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        VAULT_ADDR: http://127.0.0.1:8200
        VAULT_TOKEN: myroot
        VAULT_READ_ROLE_ID: kibaops-reads
        VAULT_READ_SECRET_ID: 7c4a2e8f-9b1d-4a3c-8e5f-2d7b9c1a4e6f
        VAULT_WRITE_ROLE_ID: kibaops-writes
        VAULT_WRITE_SECRET_ID: 3f8e1c9a-5d2b-4e7f-9a1c-6b8d4f2e7a9c
      run: php artisan test